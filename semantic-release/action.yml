---
name: semantic-release your GitHub Action
description: GitHub Action to semantically release your GitHub Action
author: EricCrosson
branding:
  icon: package
  color: orange

# Use a composite action for access to github.action_path
# (which is only supported in composite actions)

inputs:
  disable-semantic-release-git:
    description: Disable @semantic-release/git in your release flow. Only takes effect if the action semantic-release config is used.
    type: boolean # This is ignored, you're really passing a string
    default: false

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        # Fetch all history and tags for calculating next semantic version
        fetch-depth: 0

    - name: Install is-semantic-release-configured
      uses: EricCrosson/install-github-release-binary@v2.4.42
      with:
        targets: EricCrosson/is-semantic-release-configured@v1

    # Terminology:
    #
    # - The "host" is the repository calling this action.
    # - The "action" is this action.
    #
    # When we use the action's semantic-release configuration,
    # install node_modules into an ephemeral .semantic-release-action_github-actions directory.
    # Add this directory and the semantic-release manifest to the global gitignore.
    #
    # This has the following benefits:
    #
    # - @semantic-release/changelog does not try to commit the npm package manifest

    - id: is-semantic-release-configured
      run: |
        : test for semantic-release configuration
        if is-semantic-release-configured; then
          echo "::debug::Detected semantic-release configuration, using host repository's configuration"
          echo "host-configuration=true" >> "$GITHUB_OUTPUT"
          echo "semantic_release=./node_modules/.bin/semantic-release" >> "$GITHUB_ENV"
        else
          echo "::debug::Did not detect semantic-release configuration, using this action's built-in configuration"
          echo "host-configuration=false" >> "$GITHUB_OUTPUT"
          echo "semantic_release=$GITHUB_WORKSPACE/.semantic-release-action_github-actions/node_modules/.bin/semantic-release" >> "$GITHUB_ENV"
          echo "node_workdir=$GITHUB_WORKSPACE/.semantic-release-action_github-actions/" >> "$GITHUB_ENV"
          mkdir -p "$GITHUB_WORKSPACE/.semantic-release-action_github-actions/"
        fi
      shell: bash

    - if: steps.is-semantic-release-configured.outputs.host-configuration == 'false'
      run: |
        : configure Node.js path
        echo NODE_PATH="$node_workdir${NODE_PATH:+":$NODE_PATH"}" >> "$GITHUB_ENV"
      shell: bash

    - if: steps.is-semantic-release-configured.outputs.host-configuration == 'false'
      run: |
        : configure git to ignore semantic-release manifest
        mkdir -p "$HOME/.config/git"
        echo "/.releaserc.json" >> "$HOME/.config/git/ignore"
        echo "/.semantic-release-action_github-actions/" >> "$HOME/.config/git/ignore"
      shell: bash

    - if: steps.is-semantic-release-configured.outputs.host-configuration == 'false'
      run: |
        : install semantic-release manifest
        cp "${{ github.action_path }}/package.json" "${{ env.node_workdir }}/package.json"
        cp "${{ github.action_path }}/package-lock.json" "${{ env.node_workdir }}/package-lock.json"
        cp "${{ github.action_path }}/.releaserc.json" ".releaserc.json"
      shell: bash

    - if: steps.is-semantic-release-configured.outputs.host-configuration == 'false' && inputs.disable-semantic-release-git == 'true'
      env:
        tmpdir: ${{ runner.temp }}
      run: |
        : disable @semantic-release/git
        jq \
          '.plugins |= map(select(type == "string" and . == "@semantic-release/git" | not))' \
          .releaserc.json \
        > "${tmpdir}/.releaserc.json"

        mv "${tmpdir}/.releaserc.json" .releaserc.json
      shell: bash

    - name: Configure Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Cache host npm dependencies
      if: steps.is-semantic-release-configured.outputs.host-configuration == 'true'
      uses: actions/cache@v4
      id: cache-host-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node-host-${{ hashFiles('package.json', 'package-lock.json') }}

    - if: steps.is-semantic-release-configured.outputs.host-configuration == 'true' && steps.cache-host-node-modules.outputs.cache-hit != 'true'
      run: |
        : install host npm dependencies
        npm ci --loglevel error
      shell: bash

    - name: Cache action npm dependencies
      if: steps.is-semantic-release-configured.outputs.host-configuration == 'false'
      uses: actions/cache@v4
      id: cache-action-node-modules
      with:
        path: .semantic-release-action_github-actions/node_modules
        key: ${{ runner.os }}-node-action-${{ hashFiles('.semantic-release-action_github-actions/package-lock.json') }}

    - if: steps.is-semantic-release-configured.outputs.host-configuration == 'false' && steps.cache-action-node-modules.outputs.cache-hit != 'true'
      run: |
        : install action npm dependencies
        npm ci --ignore-scripts --loglevel error
      working-directory: ${{ env.node_workdir }}
      shell: bash

    - run: |
        : invoke semantic-release
        ${semantic_release} --repository-url ${url/git/https}
      env:
        GITHUB_TOKEN: ${{ github.token }}
        url: ${{ github.repositoryUrl }}
      shell: bash
